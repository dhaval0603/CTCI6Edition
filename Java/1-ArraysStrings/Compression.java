import java.util.Scanner;

/***
 * Compress the given string. Ex : aaabbbccaaa - a3b3c2a3 Only
 * uppercase/lowercase letters
 * 
 * @author Dhaval
 *
 */
public class Compression {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter string : ");
		String inputString = sc.next();
		System.out.println("Compressed String : " + compress(inputString));
		sc.close();
	}

	/**
	 * Perform compression
	 * 
	 * @param inputString
	 * @return
	 */
	public static String compress(String inputString) {
		// Return original string if compression size > original size
		if (inputString.length() <= sizeChecker(inputString))
			return inputString;

		StringBuffer result = new StringBuffer();
		char currentChar = inputString.charAt(0);
		int count = 0;
		
		for (int i = 0; i < inputString.length(); i++) {
			// Count characters till a new character is found.
			if (inputString.charAt(i) == currentChar) {
				count++;
			} else {
				// Append previous character and count to the result and move to
				// the new one
				result.append(currentChar);
				result.append(count);
				currentChar = inputString.charAt(i);
				count = 1;
			}
		}
		// For the last character in the string
		result.append(currentChar);
		result.append(count);

		return result.toString();
	}

	/**
	 * Calculate the size of the string generated by compression algorithm
	 * 
	 * @param inputString
	 * @return
	 */
	public static int sizeChecker(String inputString) {
		if (inputString.isEmpty() || inputString == null)
			return 0;

		int count = 0;
		int size = 0;
		char currentChar = inputString.charAt(0);

		for (int i = 0; i < inputString.length(); i++) {
			// Count characters till a new character is found.
			if (inputString.charAt(i) == currentChar) {
				count++;
			} else {
				// Caluclate the size required for previous character and move
				// to the new one
				// size = 1 character + Number of digits i.e. a3, b4
				size += (int) (1 + 1 + Math.floor(Math.log10(count)));
				currentChar = inputString.charAt(i);
				count = 1;
			}
		}
		// For the last character in the string
		size += (int) (1 + 1 + Math.floor(Math.log10(count)));
		return size;
	}
}
